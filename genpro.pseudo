let ProjectInformation be a record with 25 fields:
    AnnotatedBibliography → a boolean. ; Flag for creating an annotated
                                       ; bibliography.
    Apl → a boolean. ; Flag for creating GNU APL Code scaffolding and
                     ; output.
    Author → a string. ; The user's full name.
    Authority → a string. ; The professor, tech lead, or advisor.
    Bibliography → a string. ; The biblatex file to reference.
    CitationStyle → a string. ; The citation style to use, for
                              ; future-proofing against non-APA7
                              ; requirements.
    Content → a boolean. ; Flag for whether the content.tex file should be
                         ; included in the final project's compilation.
    Cpp → a boolean. ; Flag for creating C++ Code scaffolding and output.
    Date → a datetime. ; The due date or publishing date.
    Figures → a boolean. ; Flag for whether the figures.tex file should be
                         ; included in the final compilation.
    Gemini → a boolean. ; Flag for creating the Gemtext output for the
                        ; project.
    Guile → a boolean. ; Flag for creating GNU Guile Code scaffolding and
                       ; output.
    HTML → a boolean. ; Flag for creating the HTML Output.
    Institution → a string. ; The school or supporting body.
    Java → a boolean. ; Flag for creating Java Code scaffolding and
                      ; output.
    JavaLocalLibraries → a list of strings. ; Directories or filenames to
                                            ; include as libraries, under
                                            ; the /lib directory of the
                                            ; project.
    LocalBib → a boolean. ; Flag for creating a project-local copy of all
                          ; references used.
    Metapost → a boolean. ; Flag for creating and compiling the Metapost
                          ; Component.
    OCaml → a boolean. ; Flag for creating OCaml Code scaffolding and
                       ; output.
    Project → a string. ; The project title.
    Prolog → a boolean. ; Flag for creating Prolog Code scaffolding and
                        ; output.
    References → a boolean. ; Flag for whether the references section
                            ; should be included in the final projects
                            ; compilation.
    SQL → a boolean. ; Flag for creating an SQL script to store this
                     ; project in a Postgres Database.
    Section → a string. ; The class or laboratory.
    Zig → a boolean. ; Flag for creating Zig Code scaffolding and output.
end let.

begin [BuildFileName].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.
      let SectionCode be the pick 0 of the result of calling [SplitString]
          on Info -> Section and ":".
      append Info -> Date to Result.
      append "." to Result.
      append SectionCode to Result.
      append "." to Result.
      append Info -> Project to Result.
      if Info -> AnnotatedBibliography then:
         append "-annotated-bibliography" to Result.
      end if.

      return the result of calling [DowncaseString]
             on the result of calling [SanitizeString]
             on Result.
end [BuildFileName].

begin [BuildLatexCommand].
      expect CommandName and Value as arguments,
      expecting a string and a string.

      let Result be a string.
      append "\newcommand{\\" to Result.
      append CommandName to Result.
      append "}{\\string" to Result.
      append Value to Result.
      append "}" to Result.
      append newline to Result.

      return Result.
end [BuildLatexCommand].

begin [BuildMetaFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.
      append the result of calling [BuildLatexCommand]
             on "localbibliography" and Info -> Bibliography
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localtitle" and Info -> Project
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localauthor" and Info -> Author
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localschool" and Info -> Institution
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localsection" and Info -> Section
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localprofessor" and Info -> Authority
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localduedate" and Info -> Date
             to Result.

      append newline to Result.
      append "% Genpro version 1." to Result.

      return Result.
end [BuildMetaFileContent].end [BuildMetaFileContent].

begin [BuildPreambleFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.


      append "\usepackage{lwarp}
\CSSFilename{https://cdr255.com/css/lwarp-cdr255.css}
\usepackage{geometry}
\geometry{
  letterpaper,
  left=1in,
  right=1in,
  top=1in,
  bottom=1in}
\usepackage{etoolbox}
\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{}
\chead{}
\rhead{\thepage}
\lfoot{}
\cfoot{}
\rfoot{}
\renewcommand{\headrulewidth}{0pt}
\usepackage[american]{babel}
\usepackage{xpatch}
\usepackage[backend=biber,style=" to Result.
      if Info -> CitationStyle is "APA7" then
         append "apa," to Result.
      else
         append "apa," to Result. ;; Same either way for now, default for
                                  ;; future use.
      end if.
      if Info -> AnnotatedBibliography then
         append "annotation=true," to Result.
      else
         append "annotation=false," to Result.
      end if.
      append "loadfiles=true]{biblatex}
\usepackage[]{setspace}
\usepackage{indentfirst}
\usepackage{fontspec}
\setmainfont{TeXGyreTermes}
\newfontfamily{\freemono}{FreeMono.otf}[Path = " to Result.
      append the result of calling [ShellCommandToString]
             on
             "fc-list | grep FreeMono.otf | sed 's/:.*//g;s/\/[A-z.]*$/\//;1q'"
             to Result.
      append "]
      \newfontfamily{\unifont}{unifont.ttf}[Path = \"" to Result.
      append the result of calling [ShellCommandToString]
             on
             "fc-list | grep unifont.ttf | sed 's/:.*//g;s/\/[A-z.]*$/\//;1q'"
             to Result.
   append "]
\appto{\bibsetup}{\raggedright}
\bibliography{\localbibliography}
\DeclareLanguageMapping{american}{american-apa}
\setlength{\parindent}{4em}
\usepackage{titlesec}
\titleformat{\section}
 {\centering\normalfont\normalsize\bfseries}{\thesection.}{1em}{}
\titleformat{\subsection}
 {\normalfont\normalsize\itshape}{\thesubsection.}{1em}{}
\titleformat{\subsubsection}
 {\normalfont\normalsize\itshape}{\thesubsubsection.}{1em}{}
\usepackage{graphicx}
\graphicspath{ {./images/} }
\usepackage{caption}
\input{colors}
\usepackage{hyperref}
\hypersetup{colorlinks  = true, % Swap these two if You
          %hidelinks   = false,  % Don't want links to be obvious.
           linkcolor   = href-link,
           filecolor   = href-file,
           urlcolor    = href-url,
           anchorcolor = href-anchor,
           citecolor   = href-cite,
           menucolor   = href-menu,
           runcolor    = href-run,
           linktoc     = all,
           pdftitle    = \localtitle,
           pdfauthor   = \localauthor,
          %pdfsubject  = key topic,  % Metadata not supported by
          %pdfkeywords = key words,  % Genpro yet.
}
\usepackage[noabbrev]{cleveref}
\usepackage{fancyvrb}
\input{listings}
\usepackage{minted}
\usepackage{datetime2}
\usepackage{luamplib}
\mplibtextextlabel{enable}
\everymplib{input metauml;}
\mplibforcehmode
\usepackage{mflogo}
\usepackage{csquotes}
\renewcommand\labelitemi{\bullet}
\renewcommand\labelitemii{\cdot}
\renewcommand\labelitemiii{\circ}
\AtBeginEnvironment{appendices}{\crefalias{section}{appendix}}
\newcommand{\hlabel}{\phantomsection\label}
\newcommand{\noteheader}{ \\ \frenchspacing{}\textit{Note.}\nonfrenchspacing{}\doublespacing{} }
\newcommand{\figuretitle}[1]{\caption[]{ \\~\\ \textit{#1}}}
\doublespacing
\DeclareCaptionLabelSeparator*{spaced}{\\[2ex]}
\captionsetup[table]{labelsep=none,labelfont=bf,justification=raggedright,
 singlelinecheck=false}
\captionsetup[figure]{labelsep=none,labelfont=bf,justification=raggedright,
 singlelinecheck=false}

% Genpro version 1." to Result.

   return Result.
end [BuildPreambleFileContent].

begin [BuildListingsFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      return "\usepackage[procnames]{listings}

\makeatletter
\lst@InputCatcodes
\def\lst@DefEC{%
 \lst@CCECUse \lst@ProcessLetter
  ^^80^^81^^82^^83^^84^^85^^86^^87^^88^^89^^8a^^8b^^8c^^8d^^8e^^8f%
  ^^90^^91^^92^^93^^94^^95^^96^^97^^98^^99^^9a^^9b^^9c^^9d^^9e^^9f%
  ^^a0^^a1^^a2^^a3^^a4^^a5^^a6^^a7^^a8^^a9^^aa^^ab^^ac^^ad^^ae^^af%
  ^^b0^^b1^^b2^^b3^^b4^^b5^^b6^^b7^^b8^^b9^^ba^^bb^^bc^^bd^^be^^bf%
  ^^c0^^c1^^c2^^c3^^c4^^c5^^c6^^c7^^c8^^c9^^ca^^cb^^cc^^cd^^ce^^cf%
  ^^d0^^d1^^d2^^d3^^d4^^d5^^d6^^d7^^d8^^d9^^da^^db^^dc^^dd^^de^^df%
  ^^e0^^e1^^e2^^e3^^e4^^e5^^e6^^e7^^e8^^e9^^ea^^eb^^ec^^ed^^ee^^ef%
  ^^f0^^f1^^f2^^f3^^f4^^f5^^f6^^f7^^f8^^f9^^fa^^fb^^fc^^fd^^fe^^ff%
  ^^^^20ac^^^^0153^^^^0152%
  ^^^^20a7^^^^2190^^^^2191^^^^2192^^^^2193^^^^2206^^^^2207^^^^220a%
  ^^^^2218^^^^2228^^^^2229^^^^222a^^^^2235^^^^223c^^^^2260^^^^2261%
  ^^^^2262^^^^2264^^^^2265^^^^2282^^^^2283^^^^2296^^^^22a2^^^^22a3%
  ^^^^22a4^^^^22a5^^^^22c4^^^^2308^^^^230a^^^^2336^^^^2337^^^^2339%
  ^^^^233b^^^^233d^^^^233f^^^^2340^^^^2342^^^^2347^^^^2348^^^^2349%
  ^^^^234b^^^^234e^^^^2350^^^^2352^^^^2355^^^^2357^^^^2359^^^^235d%
  ^^^^235e^^^^235f^^^^2361^^^^2362^^^^2363^^^^2364^^^^2365^^^^2368%
  ^^^^236a^^^^236b^^^^236c^^^^2371^^^^2372^^^^2373^^^^2374^^^^2375%
  ^^^^2377^^^^2378^^^^237a^^^^2395^^^^25af^^^^25ca^^^^25cb%
  ^^00}
\lst@RestoreCatcodes
\makeatother

\lstdefinelanguage{apl}
{
extendedchars=true,
sensitive=True,
breakatwhitespace=false,
otherkeywords={},
morekeywords= [2]{', (, ), +, \,, -, ., /, :, ;, <, =, >, ?, [, ],
\\, _, ¨, ¯, ×, ÷, ←, ↑, →, ↓, ∆, ∇, ∘, ∣, ∧, ∨,
∩, ∪, ∼, ≠, ≤, ≥, ≬, ⊂, ⊃, ⌈, ⌊, ⊤, ⊥, ⋆, ⌶, ⌷,
⌸, ⌹, ⌺, ⌻, ⌼, ⌽, ⌾, ⌿, ⍀, ⍁, ⍂, ⍃, ⍄, ⍅, ⍆, ⍇,
⍈, ⍉, ⍊, ⍋, ⍌, ⍍, ⍎, ⍏, ⍐, ⍑, ⍒, ⍓, ⍔, ⍕, ⍖, ⍗,
⍘, ⍙, ⍚, ⍛, ⍜, ⍞, ⍟, ⍠, ⍡, ⍢, ⍣, ⍤, ⍥, ⍦, ⍧,
⍨, ⍩, ⍪, ⍫, ⍬, ⍭, ⍮, ⍯, ⍰, ⍱, ⍲, ⍳, ⍴, ⍵, ⍶, ⍷,
⍸, ⍹, ⍺, ⎕, ○, *},
alsoletter={/,-,*,|,\\,\,},
morecomment=[l]{⍝},
morecomment=[l]{\#},
morestring=[b]\",
morestring=[b]',
moreprocnamekeys={∇}
}[keywords, comments, strings, procnames]

\lstset{%
  basicstyle=\freemono\small,
  keywordstyle=[2]\color{code-keyword},
  procnamestyle=\color{code-variable},
  % identifierstyle=,
  commentstyle=\slshape\color{code-comment}, % no slanted shape in APL385
  stringstyle=\ttfamily\color{code-string},
  showstringspaces=false,
  % frame=single,
  % framesep=1pt,
  % framerule=0.8pt,
  breaklines=true,      % break long code lines
  breakindent=0pt
}
"
end [BuildListingsFileContent].

begin [BuildColorsFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      return " \usepackage[html]{xcolor}
% CDR Colors
\definecolor{cdr-black}{HTML}{2d3743}
\definecolor{cdr-cyan}{HTML}{34cae2}
\definecolor{cdr-orange}{HTML}{e67128}
\definecolor{cdr-green}{HTML}{338f86}
\definecolor{cdr-magenta}{HTML}{ee7ae7}
\definecolor{cdr-red}{HTML}{ff4242}
\definecolor{cdr-white}{HTML}{e1e1e0}
\definecolor{cdr-yellow}{HTML}{ffad29}

% HrefColors
\definecolor{href-link}{HTML}{03872d}
\definecolor{href-file}{HTML}{032d87}
\definecolor{href-url}{HTML}{032d87}
\definecolor{href-cite}{HTML}{2d0387}
\definecolor{href-anchor}{HTML}{87032d}
\definecolor{href-menu}{HTML}{03872d}
\definecolor{href-run}{HTML}{87032d}

% CodeColors

% Pygments Xcode Theme:
% =====================
% Keywords A90D91
% Comments 177500
% Variable 3F6E75
% String C41A16
% Constant 1C01CE
\definecolor{code-comment}{HTML}{177500}
\definecolor{code-keyword}{HTML}{a90d91}
\definecolor{code-variable}{HTML}{3f6e75}
\definecolor{code-string}{HTML}{c41a16}
\definecolor{code-constant}{HTML}{1c01ce}

"
end [BuildColorsFileContent].
