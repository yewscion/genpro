let ProjectInformation be a record with 25 fields:
    AnnotatedBibliography → a boolean. ; Flag for creating an annotated
                                       ; bibliography.
    Apl → a boolean. ; Flag for creating GNU APL Code scaffolding and
                     ; output.
    Author → a string. ; The user's full name.
    Authority → a string. ; The professor, tech lead, or advisor.
    Bibliography → a string. ; The biblatex file to reference.
    CitationStyle → a string. ; The citation style to use, for
                              ; future-proofing against non-APA7
                              ; requirements.
    Content → a boolean. ; Flag for whether the content.tex file should be
                         ; included in the final project's compilation.
    Cpp → a boolean. ; Flag for creating C++ Code scaffolding and output.
    Date → a datetime. ; The due date or publishing date.
    Figures → a boolean. ; Flag for whether the figures.tex file should be
                         ; included in the final compilation.
    Gemini → a boolean. ; Flag for creating the Gemtext output for the
                        ; project.
    Guile → a boolean. ; Flag for creating GNU Guile Code scaffolding and
                       ; output.
    HTML → a boolean. ; Flag for creating the HTML Output.
    Institution → a string. ; The school or supporting body.
    Java → a boolean. ; Flag for creating Java Code scaffolding and
                      ; output.
    JavaLocalLibraries → a list of strings. ; Directories or filenames to
                                            ; include as libraries, under
                                            ; the /lib directory of the
                                            ; project.
    LocalBib → a boolean. ; Flag for creating a project-local copy of all
                          ; references used.
    Metapost → a boolean. ; Flag for creating and compiling the Metapost
                          ; Component.
    OCaml → a boolean. ; Flag for creating OCaml Code scaffolding and
                       ; output.
    Project → a string. ; The project title.
    Prolog → a boolean. ; Flag for creating Prolog Code scaffolding and
                        ; output.
    References → a boolean. ; Flag for whether the references section
                            ; should be included in the final projects
                            ; compilation.
    SQL → a boolean. ; Flag for creating an SQL script to store this
                     ; project in a Postgres Database.
    Section → a string. ; The class or laboratory.
    Zig → a boolean. ; Flag for creating Zig Code scaffolding and output.
end let.

begin [BuildFileName].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.
      let SectionCode be the pick 0 of the result of calling [SplitString]
          on Info -> Section and ":".
      append Info -> Date to Result.
      append "." to Result.
      append SectionCode to Result.
      append "." to Result.
      append Info -> Project to Result.
      if Info -> AnnotatedBibliography then:
         append "-annotated-bibliography" to Result.
      end if.

      return the result of calling [DowncaseString]
             on the result of calling [SanitizeString]
             on Result.
end [BuildFileName].

begin [BuildLatexCommand].
      expect CommandName and Value as arguments,
      expecting a string and a string.

      let Result be a string.
      append "\newcommand{\\" to Result.
      append CommandName to Result.
      append "}{\\string" to Result.
      append Value to Result.
      append "}" to Result.
      append newline to Result.

      return Result.
end [BuildLatexCommand].

begin [BuildMetaFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.
      append the result of calling [BuildLatexCommand]
             on "localbibliography" and Info -> Bibliography
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localtitle" and Info -> Project
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localauthor" and Info -> Author
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localschool" and Info -> Institution
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localsection" and Info -> Section
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localprofessor" and Info -> Authority
             to Result.
      append the result of calling [BuildLatexCommand]
             on "localduedate" and Info -> Date
             to Result.

      append newline to Result.
      append "% Genpro version 1." to Result.

      return Result.
end [BuildMetaFileContent].end [BuildMetaFileContent].

begin [BuildPreambleFileContent].
      expect Info as an argument,
      expecting a ProjectInformation record.

      let Result be a string.


      append "\usepackage{lwarp}
\CSSFilename{https://cdr255.com/css/lwarp-cdr255.css}
\usepackage{geometry}
\geometry{
  letterpaper,
  left=1in,
  right=1in,
  top=1in,
  bottom=1in}
\usepackage{etoolbox}
\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{}
\chead{}
\rhead{\thepage}
\lfoot{}
\cfoot{}
\rfoot{}
\renewcommand{\headrulewidth}{0pt}
\usepackage[american]{babel}
\usepackage{xpatch}
\usepackage[backend=biber,style=" to Result.
      if Info -> CitationStyle is "APA7" then
         append "apa," to Result.
      else
         append "apa," to Result. ;; Same either way for now, default for
                                  ;; future use.
      end if.
      if Info -> AnnotatedBibliography then
         append "annotation=true," to Result.
      else
         append "annotation=false," to Result.
      end if.
      append "loadfiles=true]{biblatex}
\usepackage[]{setspace}
\usepackage{indentfirst}
\usepackage{fontspec}
\setmainfont{TeXGyreTermes}
\newfontfamily{\freemono}{FreeMono.otf}[Path = " to Result.
      append the result of calling [ShellCommandToString]
             on
             "fc-list | grep FreeMono.otf | sed 's/:.*//g;s/\/[A-z.]*$/\//;1q'"
             to Result.
      append "]
      \newfontfamily{\unifont}{unifont.ttf}[Path = \"" to Result.
      append the result of calling [ShellCommandToString]
             on
             "fc-list | grep unifont.ttf | sed 's/:.*//g;s/\/[A-z.]*$/\//;1q'"
             to Result.
   append "]
\appto{\bibsetup}{\raggedright}
\bibliography{\localbibliography}
\DeclareLanguageMapping{american}{american-apa}
\setlength{\parindent}{4em}
\usepackage{titlesec}
\titleformat{\section}
 {\centering\normalfont\normalsize\bfseries}{\thesection.}{1em}{}
\titleformat{\subsection}
 {\normalfont\normalsize\itshape}{\thesubsection.}{1em}{}
\titleformat{\subsubsection}
 {\normalfont\normalsize\itshape}{\thesubsubsection.}{1em}{}
\usepackage{graphicx}
\graphicspath{ {./images/} }
\usepackage{caption}
\input{colors}
\usepackage{hyperref}
\hypersetup{colorlinks  = true, % Swap these two if You
          %hidelinks   = false,  % Don't want links to be obvious.
           linkcolor   = href-link,
           filecolor   = href-file,
           urlcolor    = href-url,
           anchorcolor = href-anchor,
           citecolor   = href-cite,
           menucolor   = href-menu,
           runcolor    = href-run,
           linktoc     = all,
           pdftitle    = \localtitle,
           pdfauthor   = \localauthor,
          %pdfsubject  = key topic,  % Metadata not supported by
          %pdfkeywords = key words,  % Genpro yet.
}
\usepackage[noabbrev]{cleveref}
\usepackage{fancyvrb}
\input{listings}
\usepackage{minted}
\usepackage{datetime2}
\usepackage{luamplib}
\mplibtextextlabel{enable}
\everymplib{input metauml;}
\mplibforcehmode
\usepackage{mflogo}
\usepackage{csquotes}
\renewcommand\labelitemi{\bullet}
\renewcommand\labelitemii{\cdot}
\renewcommand\labelitemiii{\circ}
\AtBeginEnvironment{appendices}{\crefalias{section}{appendix}}
\newcommand{\hlabel}{\phantomsection\label}
\newcommand{\noteheader}{ \\ \frenchspacing{}\textit{Note.}\nonfrenchspacing{}\doublespacing{} }
\newcommand{\figuretitle}[1]{\caption[]{ \\~\\ \textit{#1}}}
\doublespacing
\DeclareCaptionLabelSeparator*{spaced}{\\[2ex]}
\captionsetup[table]{labelsep=none,labelfont=bf,justification=raggedright,
 singlelinecheck=false}
\captionsetup[figure]{labelsep=none,labelfont=bf,justification=raggedright,
 singlelinecheck=false}

% Genpro version 1." to Result.

   return Result.
end [BuildPreambleFileContent].
